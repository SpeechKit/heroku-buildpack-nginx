#!/usr/bin/env bash

set -e

# clean up leaking environment
unset GIT_DIR

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2

wget -O luajit.tar.gz http://luajit.org/download/LuaJIT-2.0.4.tar.gz \
    && mkdir -p luajit \
    && tar -zxf luajit.tar.gz -C luajit --strip-components=1 \
    && cd luajit \
    && make PREFIX=$BUILD_DIR/luajit install \
    && cd ..

mkdir -p $BUILD_DIR/.profile.d
LUAJIT_LIB_PATH=$(echo $BUILD_DIR/luajit/lib)

echo 'export CHECK_ENV=${LUAJIT_LIB_PATH}:$LD_LIBRARY_PATH' >> $BUILD_DIR/.profile.d/lua.sh
chmox +x $BUILD_DIR/.profile.d/lua.sh

ln -sf $BUILD_DIR/luajit/lib/libluajit-5.1.so.2.0.4 $BUILD_DIR/luajit/lib/libluajit-5.1.so
ln -sf $BUILD_DIR/luajit/lib/libluajit-5.1.so.2.0.4 $BUILD_DIR/luajit/lib/libluajit-5.1.so.2

mkdir -p "$BUILD_DIR/bin/"
mkdir -p "$BUILD_DIR/nginx"
tar -zxvf "nginx-$STACK".tgz -C "$BUILD_DIR/nginx"

cp "$BUILD_DIR/nginx/nginx" "$BUILD_DIR/bin/nginx"
cp "$BUILD_DIR/nginx/nginx-debug" "$BUILD_DIR/bin/nginx-debug"

nginx_version=$($BUILD_DIR/bin/nginx -V 2>&1 | head -1 | awk '{ print $NF }')
echo "-----> nginx-buildpack: Installed ${nginx_version} to app/bin"
cp bin/start-nginx "$BUILD_DIR/bin/"
echo '-----> nginx-buildpack: Added start-nginx to app/bin'
cp bin/start-nginx-debug "$BUILD_DIR/bin/"
echo '-----> nginx-buildpack: Added start-nginx-debug to app/bin'
cp bin/start-nginx-solo "$BUILD_DIR/bin/"
echo '-----> nginx-buildpack: Added start-nginx-solo to app/bin'

mkdir -p "$BUILD_DIR/config"

if [[ ! -f $BUILD_DIR/config/mime.types ]]; then
	cp "$BUILD_DIR/nginx/mime.types" "$BUILD_DIR/config/"
	echo '-----> nginx-buildpack: Default mime.types copied to app/config/'
else
	echo '-----> nginx-buildpack: Custom mime.types found in app/config.'
fi

if [[ ! -f $BUILD_DIR/config/nginx.conf.erb ]]; then
	cp config/nginx.conf.erb "$BUILD_DIR/config/"
	echo '-----> nginx-buildpack: Default config copied to app/config.'
else
	echo '-----> nginx-buildpack: Custom config found in app/config.'
fi

# cleanup
rm -r "$BUILD_DIR/nginx"

exit 0
